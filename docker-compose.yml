services:
  php:
    container_name: readback_php
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST="${REDIS_HOST}"
      - DB_HOST="${DB_HOST}"
    volumes:
      - ./:/var/www/html
    healthcheck:
      test: ["CMD-SHELL", "php -v"]
      interval: 30s
      timeout: 10s
      retries: 3
  web:
    image: nginx:alpine
    container_name: readback_web
    working_dir: /var/www/html
    depends_on:
      php:
        condition: service_healthy
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - .docker/nginx/nginx.local.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
  node:
    container_name: readback_node
    image: node:22-alpine
    user: node
    working_dir: /assets
    depends_on:
      php:
        condition: service_healthy
    ports:
      - "5173:5173"
    volumes:
      - ./:/assets
    command: npm run dev
    dns:
      - 8.8.8.8
      - 1.1.1.1
  db:
    image: postgres:alpine
    container_name: readback_db
    restart: always
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"
    volumes:
      - postgresql:/var/lib/postgresql/data    
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_USERNAME} -d $${DB_DATABASE} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    container_name: readback_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    ports:
      - "27018:27017"
    volumes:
      - mongodb:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  mongo-express:
    image: mongo-express:latest
    container_name: readback_mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy 
  pgadmin:
    image: dpage/pgadmin4
    container_name: readback_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
    depends_on:
      db:
        condition: service_healthy 
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
  redis:
    image: redis:alpine
    container_name: readback_redis
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  horizon:
    container_name: readback_horizon
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST="${REDIS_HOST}"
      - DB_HOST="${DB_HOST}"
    depends_on:
      php:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    command: php artisan horizon

  scheduler:
    container_name: readback_scheduler
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST="${REDIS_HOST}"
      - DB_HOST="${DB_HOST}"
    depends_on:
      php:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    command: php artisan schedule:work

  mailpit:
    image: axllent/mailpit
    container_name: readback_mailpit
    restart: always
    ports:
      - "8020:8025"
      - "1020:1025"
    volumes:
      - mailpit:/data
    dns:
      - 8.8.8.8
      - 1.1.1.1
volumes:
  postgresql:
    driver: local
  activity_postgresql:
    driver: local
  pgadmin:
    driver: local
  redis:
    driver: local
  mailpit:
    driver: local
  mongodb:         
    driver: local
